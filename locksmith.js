javascript:(function(){if(document.getElementById('locksmith-modal'))return;/* helpers */const esc=s=>s.replace(/&/g,'&amp;').replace(/</g,'&lt;').replace(/>/g,'&gt;').replace(/"/g,'&quot;');const pageURL=esc(location.href);/* generator page */const html=`<!doctype html><html lang="en"><meta charset="utf-8"><title>LockSmith â€“ link maker</title><style> :root{--c1:#2563eb;--c2:#1e40af;--radius:12px} *{box-sizing:border-box;font-family:system-ui,sans-serif} body{margin:0;height:100vh;display:flex;align-items:center;justify-content:center;      background:radial-gradient(circle at top left,#f0f4ff 0%,#ffffff 60%)} .card{width:min(420px,90%);background:#fff;border-radius:var(--radius);padding:2rem 1.75rem;       box-shadow:0 10px 25px rgba(0,0,0,.1)} h1{margin:0 0 1.2rem;font-size:1.55rem;display:flex;align-items:center;gap:.4rem} h1 span{font-size:1.3rem} label{display:block;margin-top:1rem;font-weight:500} input{width:100%;padding:.55rem .65rem;margin-top:.35rem;border:1px solid #d1d5db;border-radius:6px;font-size:1rem} input:focus{outline:none;border-color:var(--c1);box-shadow:0 0 0 3px rgba(37,99,235,.25)} button#build{margin-top:1.4rem;width:100%;padding:.65rem;cursor:pointer;font-size:1rem;font-weight:600;              color:#fff;background:var(--c1);border:none;border-radius:6px;transition:background .18s ease} button#build:hover{background:var(--c2)} #out{margin-top:1.8rem;text-align:center} /* âœ”%EF%B8%8E looks like a bookmark-bar button */ #link,#dragTip{display:inline-flex;align-items:center;gap:.35rem;                background:#f3f4f6;color:#111827;padding:.45rem .9rem;                border:1px solid #d1d5db;border-radius:6px;font-weight:500;text-decoration:none;                font-size:.9rem;box-shadow:inset 0 1px 0 #fff} #link:hover{background:#e5e7eb} #dragTip{margin-top:.7rem;cursor:default;pointer-events:none;font-size:.82rem} pre{margin-top:.9rem;font-size:.83rem;white-space:pre-wrap;word-break:break-all;     background:#f9fafb;border:1px solid #e5e7eb;border-radius:6px;padding:.8rem}</style><div class="card">  <h1>LockSmith&nbsp;<span>ðŸ”‘</span></h1>  <p style="margin:.4rem 0 1.25rem;font-size:.9rem;line-height:1.45">     Fill in the fields, press <b>Build</b>, then drag the blue button to your bookmarks bar.  </p>  <label>Target&nbsp;URL    <input id="u" value="${pageURL}">  </label>  <label>Password    <input id="p" type="password">  </label>  <label>Bookmark&nbsp;name&nbsp;(optional)    <input id="n" placeholder="LockLink â†’">  </label>  <button id="build" type="button">Build</button>  <div id="out"></div></div><script> (()=>{  const te=new TextEncoder(),td=new TextDecoder();  const b64=u=>btoa(String.fromCharCode(...new Uint8Array(u)));  const b64toBuf=s=>Uint8Array.from(atob(s),c=>c.charCodeAt(0));  async function encrypt(msg,pw){    const salt=crypto.getRandomValues(new Uint8Array(16)),          iv  =crypto.getRandomValues(new Uint8Array(12)),          keyMat=await crypto.subtle.importKey('raw',te.encode(pw),'PBKDF2',false,['deriveKey']),          key=await crypto.subtle.deriveKey({name:'PBKDF2',salt,iterations:100000,hash:'SHA-256'},                                            keyMat,{name:'AES-GCM',length:256},false,['encrypt']),          ct =await crypto.subtle.encrypt({name:'AES-GCM',iv},key,te.encode(msg));    return b64(salt)+'.'+b64(iv)+'.'+b64(ct);  }  build.addEventListener('click',async()=>{    const url=u.value.trim(), pw=p.value,          label=n.value.trim()||'LockLink â†’';    if(!url||!pw){alert('URL and password required');return;}    const blob = await encrypt(url,pw);    const code = \%60javascript:(async()=>{try{      const te=new TextEncoder(),td=new TextDecoder(),            b64ToBuf=s=>Uint8Array.from(atob(s),c=>c.charCodeAt(0)),            [ss,ii,dd]='\${blob}'.split('.'),            salt=b64ToBuf(ss),iv=b64ToBuf(ii),data=b64ToBuf(dd),            km=await crypto.subtle.importKey('raw',te.encode(prompt('Password?')||''),'PBKDF2',false,['deriveKey']),            key=await crypto.subtle.deriveKey({name:'PBKDF2',salt,iterations:100000,hash:'SHA-256'},                                              km,{name:'AES-GCM',length:256},false,['decrypt']),            url=td.decode(await crypto.subtle.decrypt({name:'AES-GCM',iv},key,data));      /^https?:/.test(url)?location.href=url:alert('Incorrect password');    }catch{alert('Incorrect password');}})();\%60;    out.innerHTML='';    /* main bookmark */    const a=document.createElement('a');    a.id='link'; a.href=code; a.textContent=label; a.title='Drag me to bookmarks';    out.appendChild(a);    /* drag-instruction styled like a bookmark-bar tooltip */    const tip=document.createElement('div');    tip.id='dragTip'; tip.textContent='ðŸ“Œ Drag this button to your bookmarks bar';    out.appendChild(tip);    /* raw code block */    const pre=document.createElement('pre');    pre.textContent=code; out.appendChild(pre);  }); })();<\/script></html>%60;/* modal + sandboxed iframe */const modal=document.createElement('div');modal.id='locksmith-modal';modal.style.cssText='position:fixed;inset:0;background:rgba(0,0,0,.55);display:flex;align-items:center;justify-content:center;z-index:2147483647';const frame=document.createElement('iframe');frame.setAttribute('sandbox','allow-scripts');  /* opaque origin */frame.style.cssText='width:100%;max-width:460px;height:540px;border:none;border-radius:14px;background:#fff';frame.srcdoc=html;modal.addEventListener('click',e=>{if(e.target===modal)modal.remove();});window.addEventListener('keydown',e=>{if(e.key==="Escape"&&modal.parentNode)modal.remove();});modal.appendChild(frame);document.body.appendChild(modal);})();